{"mappings":"ACYA,IAAI,4BAAM,GAAoB;IAC5B,MAAM,EAAE,GAAG;IACX,QAAQ,EAAE,EAAE;CACb,AAAC;AAEF,MAAM,+BAAS,GAAG,IAAI,GAAG,EAAY,AAAC;AAEtC,SAAS,oCAAc,CAAC,KAAa,EAA6B;IAChE,IAAI,CAAC;QAAC,GAAG;QAAE,GAAG;QAAE,GAAG;QAAE,GAAG;KAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EACvC,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,KAAK,CAAC,CAAC;CAEjD;AAED,SAAS,kCAAY,CAAC,KAAY,EAAE;IAClC,+BAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,GAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;CAClD;AAED,SAAS,6BAAO,CACd,QAAkB,EAClB,WAAmB,EACnB,YAAoB,EACpB;IACA,OAAO,CAAA;QACL,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,GAAK,CAAC,GAAG,CAAC;QACpC,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,GAAK,CAAC,GAAG,CAAC;QACpC,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,GAAK,CAAC,GAAG,CAAC;QACpC,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,GAAK,CAAC,GAAG,CAAC;KACrC,CAAA,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;CACxC;AAEM,MAAM,yCAAK,GAAG;IACnB,SAAS,EAAC,QAAkB,EAAc;QACxC,+BAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,OAAO,IAAM;YACX,+BAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC5B,CAAC;KACH;IACD,QAAQ,IAAU;QAChB,OAAO,MAAM,CAAC,MAAM,CAAC,4BAAM,CAAC,CAAC;KAC9B;IACD,GAAG,kCAAY,CAAC;QACd,QAAQ,EAAC,KAAK,EAAE,KAAa,EAAE,QAAgB,EAAE;YAC/C,oCAAc,CAAC,QAAQ,CAAC,CAAC;YAEzB,MAAM,QAAQ,GAAG;mBAAI,KAAK,CAAC,QAAQ;gBAAE;2BAAE,KAAK;8BAAE,QAAQ;iBAAE;aAAC,AAAC;YAC1D,OAAO;0BAAE,QAAQ;gBAAE,MAAM,EAAE,GAAG;aAAE,CAAC;SAClC;QACD,SAAS,EAAC,KAAK,EAAE;YACf,MAAM,aAAa,GAAG;mBACjB,KAAK,CAAC,QAAQ;gBACjB;oBAAE,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC;oBAAE,QAAQ,EAAE,IAAI;iBAAE;aAC3D,AAAC;YAEF,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,GAAK;gBACnD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAChB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;gBAG5D,MAAM,KAAK,GAAG,6BAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,AAAC;gBAC9D,OAAO;2BAAE,KAAK;oBAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ;iBAAE,CAAC;aAC5C,CAAC,AAAC;YAEH,OAAO;gBAAE,QAAQ,EAAE,EAAE;gBAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;aAAE,CAAC;SACvD;QACD,KAAK,EAAC,KAAK,EAAE,KAAa,EAAE;YAC1B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,AAAC;YACnE,OAAO;gBAAE,GAAG,KAAK;wBAAE,MAAM;aAAE,CAAC;SAC7B;QACD,KAAK,IAAG;YACN,OAAO;gBAAE,MAAM,EAAE,GAAG;gBAAE,QAAQ,EAAE,EAAE;aAAE,CAAC;SACtC;QACD,GAAG,EAAC,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC7B,OAAO;gBAAE,GAAG,KAAK;gBAAE,MAAM,EAAE,KAAK,CAAC,MAAM,GAAG,GAAG;aAAE,CAAC;YAGlD,OAAO,KAAK,CAAC;SACd;KACF,CAAC;CACH,AAAC;AAUF,SAAS,kCAAY,CAEnB,QAAW,EAAyB;IACpC,OAAO,MAAM,CAAC,WAAW,CACvB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,GAAK;QAC7C,OAAO;YACL,GAAG;YACH,CAAC,GAAG,IAAI,AAAO,GAAK;gBAClB,IAAI,CAAC,KAAK,EAAE,OAAO;gBACnB,MAAM,QAAQ,GAAG,4BAAM,AAAC;gBACxB,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,AAAC;gBAC1C,IAAI,QAAQ,KAAK,QAAQ,EAAE;oBACzB,4BAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACjC,kCAAY,CAAC,4BAAM,CAAC,CAAC;iBACtB;aACF;SACF,CAAC;KACH,CAAC,CACH,CAA0B;CAC5B;;ADxHD;;AEAO,SAAS,yCAAS,CAAC,KAAc,EAAE,OAAe,EAAiB;IACxE,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,AAAC;QACjC,KAAK,CAAC,IAAI,GAAG,oBAAoB,CAAC;QAClC,MAAM,KAAK,CAAC;KACb;CACF;;;AFFD,SAAS,4BAAM,CAAoB,QAAgB,EAAE;IACnD,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAI,QAAQ,CAAC,AAAC;IAC/C,CAAA,GAAA,yCAAS,CAAA,CAAC,EAAE,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,yBAAyB,CAAC,CAAC,CAAC;IACnE,OAAO,EAAE,CAAC;CACX;AAED,MAAM,6BAAO,GAAG,QAAQ,CAAC,gBAAgB,CACvC,qBAAqB,CACtB,AAAC;AACF,MAAM,+BAAS,GAAG,QAAQ,CAAC,gBAAgB,CACzC,uBAAuB,CACxB,AAAC;AACF,MAAM,+BAAS,GAAG,4BAAM,CAAoB,wBAAwB,CAAC,AAAC;AACtE,MAAM,2BAAK,GAAG,4BAAM,CAAoB,oBAAoB,CAAC,AAAC;AAC9D,MAAM,yBAAG,GAAG,4BAAM,CAAoB,kBAAkB,CAAC,AAAC;AAC1D,MAAM,4BAAM,GAAG,4BAAM,CAAiB,SAAS,CAAC,AAAC;AACjD,MAAM,+BAAS,GAAG,4BAAM,CAAiB,YAAY,CAAC,AAAC;AACvD,MAAM,mCAAa,GAAG,4BAAM,CAAiB,iBAAiB,CAAC,AAAC;AAEhE,+BAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,qCAAe,CAAC,CAAC;AACrD,2BAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,iCAAW,CAAC,CAAC;AAC7C,yBAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,+BAAS,CAAC,CAAC;AACzC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,mCAAa,CAAC,CAAC;AAClD,mCAAa,CAAC,gBAAgB,CAC5B,OAAO,EACP,CAAC,KAAiB,GAAK;IACrB,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,mCAAa,CAAC,UAAU,IAAI,KAAK,CAAC,MAAM,GAAI,CAAA,KAAK,CAAC,OAAO,GAAG,EAAE,GAAG,CAAC,CAAA,AAAC,CAAC;CACrE,EACD;IAAE,OAAO,EAAE,KAAK;CAAE,CACnB,CAAC;AAEF,6BAAO,CAAC,OAAO,CAAC,CAAC,MAAM,GAAK;IAC1B,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,kCAAY,CAAC,CAAC;CAChD,CAAC,CAAC;AAEH,+BAAS,CAAC,OAAO,CAAC,CAAC,MAAM,GAAK;IAC5B,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,oCAAc,CAAC,CAAC;CAClD,CAAC,CAAC;AAEH,SAAS,4BAAM,CAAC,KAAY,EAAE;IAC5B,4BAAM,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;IAChC,+BAAS,CAAC,SAAS,GACjB,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,GAAK;QACnC,OAAO;YAAC,GAAG;YAAE,IAAI,CAAC,KAAK;YAAE,IAAI,CAAC,QAAQ;SAAC,CACpC,MAAM,CAAC,CAAC,IAAI,GAAK,IAAI,IAAI,IAAI,CAAC,CAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;KACd,EAAE,EAAE,CAAC,GACN,GAAG,GACH,KAAK,CAAC,MAAM,CAAC;CAChB;AAED,4BAAM,CAAC,CAAA,GAAA,yCAAK,CAAA,CAAC,QAAQ,EAAE,CAAC,CAAC;AACzB,CAAA,GAAA,yCAAK,CAAA,CAAC,SAAS,CAAC,4BAAM,CAAC,CAAC;AAExB,SAAS,kCAAY,CAAC,KAAY,EAAE;IAClC,MAAM,KAAK,GAAG,AAAC,KAAK,CAAC,aAAa,CAAiB,OAAO,CAAC,MAAM,AAAC;IAClE,IAAI,KAAK,KAAK,SAAS,EACrB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAE1E,CAAA,GAAA,yCAAK,CAAA,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;CACpB;AAED,SAAS,oCAAc,CAAC,KAAY,EAAE;IACpC,MAAM,QAAQ,GAAG,AAAC,KAAK,CAAC,MAAM,CAAiB,OAAO,CAAC,QAAQ,AAAC;IAChE,IAAI,QAAQ,KAAK,SAAS,EACxB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;IAEvE,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,4BAAM,CAAC,SAAS,CAAC,AAAC;IAClD,CAAA,GAAA,yCAAK,CAAA,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;CACjC;AAED,SAAS,qCAAe,GAAG;IACzB,CAAA,GAAA,yCAAK,CAAA,CAAC,SAAS,EAAE,CAAC;CACnB;AAED,SAAS,iCAAW,GAAG;IACrB,CAAA,GAAA,yCAAK,CAAA,CAAC,KAAK,EAAE,CAAC;CACf;AAED,SAAS,+BAAS,GAAG;IACnB,CAAA,GAAA,yCAAK,CAAA,CAAC,GAAG,EAAE,CAAC;CACb;AAED,SAAS,mCAAa,CAAC,KAAoB,EAAE;IAC3C,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EACxB,CAAA,GAAA,yCAAK,CAAA,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAClB,IAAI,iBAAiB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;QAC3C,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,4BAAM,CAAC,SAAS,CAAC,AAAC;QAClD,CAAA,GAAA,yCAAK,CAAA,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;KAClC;CACF","sources":["src/index.ts","src/store.ts","src/utils.ts"],"sourcesContent":["import { State, store } from \"./store\";\nimport \"./styles.css\";\nimport { invariant } from \"./utils\";\n\nfunction select<E extends Element>(selector: string) {\n  const el = document.querySelector<E>(selector);\n  invariant(el, `the selector ${selector} didn't match any element`);\n  return el;\n}\n\nconst numbers = document.querySelectorAll<HTMLButtonElement>(\n  \"button[data-number]\"\n);\nconst operators = document.querySelectorAll<HTMLButtonElement>(\n  \"button[data-operator]\"\n);\nconst calculate = select<HTMLButtonElement>(\"button[data-calculate]\");\nconst clear = select<HTMLButtonElement>(\"button[data-clear]\");\nconst dot = select<HTMLButtonElement>(\"button[data-dot]\");\nconst result = select<HTMLDivElement>(\"#result\");\nconst operation = select<HTMLDivElement>(\"#operation\");\nconst outputWrapper = select<HTMLDivElement>(\"#output-wrapper\");\n\ncalculate.addEventListener(\"click\", handleCalculate);\nclear.addEventListener(\"click\", handleClear);\ndot.addEventListener(\"click\", handleDot);\nwindow.addEventListener(\"keydown\", handleKeydown);\noutputWrapper.addEventListener(\n  \"wheel\",\n  (event: WheelEvent) => {\n    event.preventDefault();\n    outputWrapper.scrollLeft += event.deltaY * (event.ctrlKey ? -1 : 1);\n  },\n  { passive: false }\n);\n\nnumbers.forEach((button) => {\n  button.addEventListener(\"click\", handleNumber);\n});\n\noperators.forEach((button) => {\n  button.addEventListener(\"click\", handleOperator);\n});\n\nfunction update(state: State) {\n  result.innerText = state.output;\n  operation.innerText =\n    state.operands.reduce((acc, curr) => {\n      return [acc, curr.value, curr.operator]\n        .filter((item) => item != null)\n        .join(\" \");\n    }, \"\") +\n    \" \" +\n    state.output;\n}\n\nupdate(store.getState());\nstore.subscribe(update);\n\nfunction handleNumber(event: Event) {\n  const value = (event.currentTarget as HTMLElement).dataset.number;\n  if (value === undefined) {\n    throw new Error(\"invariant error: button does not have a number value\");\n  }\n  store.input(value);\n}\n\nfunction handleOperator(event: Event) {\n  const operator = (event.target as HTMLElement).dataset.operator;\n  if (operator === undefined) {\n    throw new Error(\"invariant error: button does not have an operator\");\n  }\n  const value = Number.parseFloat(result.innerText);\n  store.operator(value, operator);\n}\n\nfunction handleCalculate() {\n  store.calculate();\n}\n\nfunction handleClear() {\n  store.clear();\n}\n\nfunction handleDot() {\n  store.dot();\n}\n\nfunction handleKeydown(event: KeyboardEvent) {\n  if (/^\\d$/.test(event.key)) {\n    store.input(event.key);\n  } else if (/^(\\+|-|\\*|\\/)$/.test(event.key)) {\n    const value = Number.parseFloat(result.innerText);\n    store.operator(value, event.key);\n  }\n}\n","type Operator = \"+\" | \"-\" | \"/\" | \"*\";\n\nexport interface State {\n  output: string;\n  operands: {\n    value: number;\n    operator: Operator;\n  }[];\n}\n\ntype Listener = (state: State) => void;\n\nlet $state: Readonly<State> = {\n  output: \"0\",\n  operands: [],\n};\n\nconst listeners = new Set<Listener>();\n\nfunction assertOperator(value: string): asserts value is Operator {\n  if (![\"+\", \"-\", \"/\", \"*\"].includes(value)) {\n    throw new Error(\"invalid operator: \" + value);\n  }\n}\n\nfunction runListeners(state: State) {\n  listeners.forEach((listener) => listener(state));\n}\n\nfunction operate(\n  operator: Operator,\n  leftOperand: number,\n  rightOperand: number\n) {\n  return {\n    \"+\": (a: number, b: number) => a + b,\n    \"-\": (a: number, b: number) => a - b,\n    \"*\": (a: number, b: number) => a * b,\n    \"/\": (a: number, b: number) => a / b,\n  }[operator](leftOperand, rightOperand);\n}\n\nexport const store = {\n  subscribe(listener: Listener): () => void {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  },\n  getState(): State {\n    return Object.freeze($state);\n  },\n  ...makeUpdaters({\n    operator(state, value: number, operator: string) {\n      assertOperator(operator);\n\n      const operands = [...state.operands, { value, operator }];\n      return { operands, output: \"0\" };\n    },\n    calculate(state) {\n      const finalOperands = [\n        ...state.operands,\n        { value: Number.parseFloat(state.output), operator: null },\n      ];\n\n      const result = finalOperands.reduce((left, right) => {\n        if (!left.operator) {\n          throw new Error(\"invariant failed: operator is required\");\n        }\n\n        const value = operate(left.operator, left.value, right.value);\n        return { value, operator: right.operator };\n      });\n\n      return { operands: [], output: String(result.value) };\n    },\n    input(state, value: string) {\n      const output = state.output === \"0\" ? value : state.output + value;\n      return { ...state, output };\n    },\n    clear() {\n      return { output: \"0\", operands: [] };\n    },\n    dot(state) {\n      if (!state.output.includes(\".\")) {\n        return { ...state, output: state.output + \".\" };\n      }\n\n      return state;\n    },\n  }),\n};\n\ntype MakeUpdatersResult<\n  T extends Partial<{ [key: string]: (state: State, ...args: any[]) => State }>\n> = {\n  [Key in keyof T]: T[Key] extends (state: State, ...args: infer Args) => any\n    ? (...args: Args) => void\n    : never;\n};\n\nfunction makeUpdaters<\n  T extends Partial<{ [key: string]: (state: State, ...args: any[]) => State }>\n>(updaters: T): MakeUpdatersResult<T> {\n  return Object.fromEntries(\n    Object.entries(updaters).map(([key, value]) => {\n      return [\n        key,\n        (...args: any[]) => {\n          if (!value) return;\n          const oldState = $state;\n          const newState = value(oldState, ...args);\n          if (oldState !== newState) {\n            $state = Object.freeze(newState);\n            runListeners($state);\n          }\n        },\n      ];\n    })\n  ) as MakeUpdatersResult<T>;\n}\n","export function invariant(value: unknown, message: string): asserts value {\n  if (!value) {\n    const error = new Error(message);\n    error.name = \"InvariantViolation\";\n    throw error;\n  }\n}\n"],"names":[],"version":3,"file":"index.4410576b.js.map"}