{"mappings":"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","sources":["src/index.ts","src/store.ts","src/lib/store.ts","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_private_method_get.mjs","node_modules/@swc/helpers/src/_class_private_method_init.mjs","src/utils.ts"],"sourcesContent":["import { State, store } from \"./store\";\nimport \"./styles.css\";\nimport { invariant } from \"./utils\";\n\nfunction select<E extends Element>(selector: string) {\n  const el = document.querySelector<E>(selector);\n  invariant(el, `the selector ${selector} didn't match any element`);\n  return el;\n}\n\nconst numbers = document.querySelectorAll<HTMLButtonElement>(\n  \"button[data-number]\"\n);\nconst operators = document.querySelectorAll<HTMLButtonElement>(\n  \"button[data-operator]\"\n);\nconst calculate = select<HTMLButtonElement>(\"button[data-calculate]\");\nconst clear = select<HTMLButtonElement>(\"button[data-clear]\");\nconst dot = select<HTMLButtonElement>(\"button[data-dot]\");\nconst result = select<HTMLDivElement>(\"#result\");\nconst operation = select<HTMLDivElement>(\"#operation\");\nconst outputWrapper = select<HTMLDivElement>(\"#output-wrapper\");\n\ncalculate.addEventListener(\"click\", handleCalculate);\nclear.addEventListener(\"click\", handleClear);\ndot.addEventListener(\"click\", handleDot);\nwindow.addEventListener(\"keydown\", handleKeydown);\noutputWrapper.addEventListener(\n  \"wheel\",\n  (event: WheelEvent) => {\n    event.preventDefault();\n    outputWrapper.scrollLeft += event.deltaY * (event.ctrlKey ? -1 : 1);\n  },\n  { passive: false }\n);\n\nnumbers.forEach((button) => {\n  button.addEventListener(\"click\", handleNumber);\n});\n\noperators.forEach((button) => {\n  button.addEventListener(\"click\", handleOperator);\n});\n\nfunction update(state: State) {\n  result.innerText = state.output;\n  operation.innerText =\n    state.operands.reduce((acc, curr) => {\n      return [acc, curr.value, curr.operator]\n        .filter((item) => item != null)\n        .join(\" \");\n    }, \"\") +\n    \" \" +\n    state.output;\n}\n\nconst { updaters, getState, subscribe } = store;\n\nupdate(getState());\nsubscribe(update);\n\nfunction handleNumber(event: Event) {\n  const value = (event.currentTarget as HTMLElement).dataset.number;\n  if (value === undefined) {\n    throw new Error(\"invariant error: button does not have a number value\");\n  }\n  updaters.input(value);\n}\n\nfunction handleOperator(event: Event) {\n  const operator = (event.target as HTMLElement).dataset.operator;\n  if (operator === undefined) {\n    throw new Error(\"invariant error: button does not have an operator\");\n  }\n  const value = Number.parseFloat(result.innerText);\n  updaters.operator(value, operator);\n}\n\nfunction handleCalculate() {\n  updaters.calculate();\n}\n\nfunction handleClear() {\n  updaters.clear();\n}\n\nfunction handleDot() {\n  updaters.dot();\n}\n\nfunction handleKeydown(event: KeyboardEvent) {\n  if (/^\\d$/.test(event.key)) {\n    updaters.input(event.key);\n  } else if (/^(\\+|-|\\*|\\/)$/.test(event.key)) {\n    const value = Number.parseFloat(result.innerText);\n    updaters.operator(value, event.key);\n  }\n}\n","import { Store } from \"./lib/store\";\nimport { invariant } from \"./utils\";\n\ntype Operator = \"+\" | \"-\" | \"/\" | \"*\";\n\nexport interface State {\n  output: string;\n  operands: { value: number; operator: Operator }[];\n}\n\nfunction isValidOperator(value: string): value is Operator {\n  return [\"+\", \"-\", \"/\", \"*\"].includes(value);\n}\n\nconst initialState: State = { output: \"0\", operands: [] };\n\nexport const store = new Store(initialState, {\n  operator(state, value: number, operator: string) {\n    invariant(isValidOperator(operator), \"invalid operator: \" + operator);\n    const operands = [...state.operands, { value, operator }];\n    return { operands, output: \"0\" };\n  },\n  calculate(state) {\n    const finalOperands = [\n      ...state.operands,\n      { value: Number.parseFloat(state.output), operator: null },\n    ];\n\n    const result = finalOperands.reduce((left, right) => {\n      invariant(left.operator, \"operator is required\");\n      const value = {\n        \"+\": (a: number, b: number) => a + b,\n        \"-\": (a: number, b: number) => a - b,\n        \"*\": (a: number, b: number) => a * b,\n        \"/\": (a: number, b: number) => a / b,\n      }[left.operator](left.value, right.value);\n      return { value, operator: right.operator };\n    });\n\n    return { operands: [], output: String(result.value) };\n  },\n  input(state, value: string) {\n    const output = state.output === \"0\" ? value : state.output + value;\n    return { ...state, output };\n  },\n  clear() {\n    return { output: \"0\", operands: [] };\n  },\n  dot(state) {\n    if (!state.output.includes(\".\")) {\n      return { ...state, output: state.output + \".\" };\n    }\n\n    return state;\n  },\n});\n","type Listener<S> = (state: Readonly<S>) => void;\n\ntype UpdatersMap<S> = Partial<{\n  [key: string]: (state: Readonly<S>, ...args: any[]) => S;\n}>;\n\ntype MakeUpdatersResult<S, T extends UpdatersMap<S>> = {\n  [Key in keyof T]: T[Key] extends (\n    state: Readonly<S>,\n    ...args: infer Args\n  ) => S\n    ? (...args: Args) => void\n    : never;\n};\n\nexport class Store<S, U extends UpdatersMap<S>> {\n  #listeners = new Set<Listener<S>>();\n  #state: Readonly<S>;\n  #updaters: MakeUpdatersResult<S, U>;\n  #runListeners(snapshot: Readonly<S>): void {\n    this.#listeners.forEach((listener) => listener(snapshot));\n  }\n\n  #makeUpdaters<U extends UpdatersMap<S>>(updatersMap: U) {\n    return Object.fromEntries(\n      Object.entries(updatersMap).map(([key, value]) => {\n        return [\n          key,\n          (...args: unknown[]) => {\n            if (!value) return;\n            const oldState = this.#state;\n            const newState = value(oldState, ...args);\n            if (oldState !== newState) {\n              const snapshot = (this.#state = Object.freeze(newState));\n              this.#runListeners(snapshot);\n            }\n          },\n        ];\n      })\n    ) as MakeUpdatersResult<S, U>;\n  }\n\n  constructor(initialState: S, updatersMap: U) {\n    this.#state = Object.freeze(initialState);\n    this.#updaters = this.#makeUpdaters<U>(updatersMap);\n  }\n\n  subscribe(listener: Listener<S>): () => void {\n    this.#listeners.add(listener);\n    return () => {\n      this.#listeners.delete(listener);\n    };\n  }\n  getState(): Readonly<S> {\n    return Object.freeze(this.#state);\n  }\n\n  get updaters(): Readonly<MakeUpdatersResult<S, U>> {\n    return Object.freeze(this.#updaters);\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n","export function invariant(value: unknown, message: string): asserts value {\n  if (!value) {\n    const error = new Error(message);\n    error.name = \"InvariantViolation\";\n    throw error;\n  }\n}\n"],"names":[],"version":3,"file":"index.b7e42f1c.js.map"}